/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inventory.ui;

import com.itextpdf.text.BadElementException;
import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.draw.DrawInterface;
import inventory.Controller.EmployeeController;
import inventory.Controller.InvoiceController;
import inventory.Controller.PurchaseOrderController;
import inventory.Controller.ReportController;
import inventory.models.Employee;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Sithara
 */
public class ReportsFrame extends javax.swing.JFrame {

    /**
     * Creates new form ReportsFrame
     */
    int invoiceFileCount = 0;
    int purchseFileCount = 0;
    int EmployeeFileCount = 0;
    int salesCount = 0;
    int grnCount = 0;

    public ReportsFrame() {

        initComponents();
        init();
    }

    public void init() {
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setResizable(false);
    }

    public void close() {
        WindowEvent windowClosingEvnt = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(windowClosingEvnt);
    }

    public String getDate() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        return dateFormat.format(cal.getTime());
    }

    public static String getTotal(String invoiceId) throws ClassNotFoundException, SQLException {
        return InvoiceController.getTotalInvoice(invoiceId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        InvoiceBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        invoiceTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        PurchaseBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        PurTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        EmployeeBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        EmployeeTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        SalesBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        backDateTxt = new javax.swing.JFormattedTextField();
        jPanel7 = new javax.swing.JPanel();
        GRNReportBtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        SupplierTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        LogOutBtn = new javax.swing.JButton();
        HomeBtn = new javax.swing.JButton();
        CatMenuBtn = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        CatMenuLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Invoice Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(0, 102, 153))); // NOI18N

        InvoiceBtn.setBackground(new java.awt.Color(0, 102, 153));
        InvoiceBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        InvoiceBtn.setForeground(new java.awt.Color(255, 255, 255));
        InvoiceBtn.setText("Invoice");
        InvoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Invoice Id");

        invoiceTxt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("INV");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invoiceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(InvoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InvoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(invoiceTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Purchase Order Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(0, 102, 153))); // NOI18N

        PurchaseBtn.setBackground(new java.awt.Color(0, 102, 153));
        PurchaseBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        PurchaseBtn.setForeground(new java.awt.Color(255, 255, 255));
        PurchaseBtn.setText("Purchase");
        PurchaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PurchaseBtnActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Purchase Id");

        PurTxt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("PUR");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PurTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(PurchaseBtn)
                .addGap(55, 55, 55))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PurchaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(PurTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Employee Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(0, 102, 153))); // NOI18N

        EmployeeBtn.setBackground(new java.awt.Color(0, 102, 153));
        EmployeeBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EmployeeBtn.setForeground(new java.awt.Color(255, 255, 255));
        EmployeeBtn.setText("Employee");
        EmployeeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Employee Id");

        EmployeeTxt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel5.setText("EM");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmployeeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EmployeeBtn)
                .addGap(49, 49, 49))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmployeeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(EmployeeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sales Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(0, 102, 153))); // NOI18N

        SalesBtn.setBackground(new java.awt.Color(0, 102, 153));
        SalesBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SalesBtn.setForeground(new java.awt.Color(255, 255, 255));
        SalesBtn.setText("Sales");
        SalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalesBtnActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Back Date");

        try {
            backDateTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-##-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        backDateTxt.setToolTipText("YYYY-MM-DD");
        backDateTxt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(backDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(backDateTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GRN Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 3, 14), new java.awt.Color(0, 102, 153))); // NOI18N

        GRNReportBtn.setBackground(new java.awt.Color(0, 102, 153));
        GRNReportBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GRNReportBtn.setForeground(new java.awt.Color(255, 255, 255));
        GRNReportBtn.setText("GRN Reports");
        GRNReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GRNReportBtnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Supplier ID");

        SupplierTxt.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("SUP");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SupplierTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(GRNReportBtn)
                .addGap(29, 29, 29))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GRNReportBtn)
                    .addComponent(jLabel9)
                    .addComponent(SupplierTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reports");

        LogOutBtn.setBackground(new java.awt.Color(0, 102, 153));
        LogOutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/ui/img/logout.png"))); // NOI18N
        LogOutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutBtnActionPerformed(evt);
            }
        });

        HomeBtn.setBackground(new java.awt.Color(0, 102, 153));
        HomeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/inventory/ui/img/Home.png"))); // NOI18N
        HomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtnActionPerformed(evt);
            }
        });

        CatMenuBtn.setBackground(new java.awt.Color(0, 102, 153));
        CatMenuBtn.setIcon(new javax.swing.ImageIcon("D:\\Mine\\Java\\Inventory\\Inventory\\src\\inventory\\ui\\img\\back32.png")); // NOI18N
        CatMenuBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                CatMenuBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                CatMenuBtnMouseExited(evt);
            }
        });
        CatMenuBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CatMenuBtnActionPerformed(evt);
            }
        });

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));

        CatMenuLbl.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        CatMenuLbl.setForeground(new java.awt.Color(0, 51, 102));
        CatMenuLbl.setText("cc");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 508, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(68, 68, 68))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(CatMenuLbl)
                        .addGap(49, 49, 49)))
                .addComponent(CatMenuBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(HomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LogOutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogOutBtn)
                    .addComponent(HomeBtn)
                    .addComponent(CatMenuBtn)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel19)
                        .addComponent(CatMenuLbl)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogOutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutBtnActionPerformed
        // TODO add your handling code here:
        try {
            close();
            new LogInForm().setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        } finally {
            //            try {
            //              //  resultSet.close();
            //              //  pst.close();
            //              //Connection connection = DbConnection.getInstance().getConnection();
            //              //connection.close();
            //            } catch (ClassNotFoundException | SQLException e) {
            //                JOptionPane.showMessageDialog(rootPane, e);
            //            }
        }
    }//GEN-LAST:event_LogOutBtnActionPerformed

    private void HomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtnActionPerformed
        // TODO add your handling code here:
        try {
            close();
            new MainFrame().setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        } finally {
            try {
                //  resultSet.close();
                //  pst.close();
                //  connection.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }
    }//GEN-LAST:event_HomeBtnActionPerformed

    private void CatMenuBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CatMenuBtnMouseEntered
        // TODO add your handling code here:
        CatMenuLbl.setText("Category Menu");
        CatMenuLbl.setForeground(Color.WHITE);
    }//GEN-LAST:event_CatMenuBtnMouseEntered

    private void CatMenuBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CatMenuBtnMouseExited
        // TODO add your handling code here:
        CatMenuLbl.setText(null);
    }//GEN-LAST:event_CatMenuBtnMouseExited

    private void CatMenuBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CatMenuBtnActionPerformed
        // TODO add your handling code here:
        try {
            close();
            new CategoryMenu().setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        } finally {
            try {
                //  resultSet.close();
                //  pst.close();
                //  connection.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
        }
    }//GEN-LAST:event_CatMenuBtnActionPerformed

    private void InvoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceBtnActionPerformed
        String fileCount = Integer.toString(invoiceFileCount);
        String invId = "INV" + invoiceTxt.getText();
        if (!invoiceTxt.getText().equals("")) {
            try {
                // TODO add your handling code here:
                Document doc = new Document(PageSize.A4);
                PdfWriter.getInstance(doc, new FileOutputStream("Invoice" + fileCount + ".pdf"));

                doc.open();
                Image image = Image.getInstance("sampath1.png");
                doc.add(image);
                //    doc.add(new Paragraph("Hello World",FontFactory.getFont(FontFactory.TIMES_BOLD,18,Font.BOLD)).setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                Chunk title = new Chunk("Invoice Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 24, Font.BOLD));
                title.setUnderline(1f, -2f); //0.1 thick, -2 y-location  
                Paragraph preface = new Paragraph("");
                preface.add(title);
                preface.setAlignment(Element.ALIGN_CENTER);
                doc.add(preface);

                doc.add(new Paragraph(""));
                Paragraph date = new Paragraph("Date : " + getDate());
                Paragraph invoiceId = new Paragraph("Invoice Id : " + invId);
                date.setAlignment(Element.ALIGN_LEFT);
                doc.add(date);
                invoiceId.setAlignment(Element.ALIGN_LEFT);
                doc.add(invoiceId);
                //    doc.add(new Paragraph(" ").setAlignment(Element.ALIGN_CENTER));
                Paragraph dot = new Paragraph("---------------------------------------------------------------------------------------------------------------");
                dot.setAlignment(Element.ALIGN_CENTER);
                doc.add(dot);

                //  doc.add(new Paragraph(getDate()));
                //   int count = InvoiceController.getCountInvoiceDetatilsByInvoiceId(invId);
                PdfPTable table = new PdfPTable(new float[]{1, 4, 1, 1, 1, 1});
//                PdfPCell cell = new PdfPCell(new Paragraph("Title"));
//                cell.setColspan(4);
//                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
//                cell.setBackgroundColor(BaseColor.DARK_GRAY);
                //     table.addCell(cell);
                table.addCell("Item Id");
                table.addCell("Item Name");
                table.addCell("Qunatity");
                table.addCell("Unit Type");
                table.addCell("Price");
                table.addCell("Line Total");

                ResultSet rst = InvoiceController.getInvoiceDetailsByInvoiceId(invId);
                //   System.out.println(rst.getString(1));
                System.out.println("++===================++");
                doc.add(new Paragraph(" "));
                while (rst.next()) {
                    Object[] row = new Object[6];
                    for (int i = 1; i <= 6; i++) {
                        row[i - 1] = rst.getString(i);
                        //     System.out.println(row[i - 1].toString());
                        table.addCell(row[i - 1].toString());
                    }

                }
                rst.close();

                doc.add(table);
                doc.add(new Paragraph(" "));
                
                Double tot = Double.parseDouble(getTotal(invId));
                String amountt = String.format("%.2f", tot );
                Paragraph total = new Paragraph(("Total : Rs. " + amountt), FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD));
                doc.add(total);
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Payment : ................................................"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Balance : ................................................"));

                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                Paragraph dots = new Paragraph("...........................");
                Paragraph sign = new Paragraph("Signature");
                dots.setAlignment(Element.ALIGN_RIGHT);
                sign.setAlignment(Element.ALIGN_RIGHT);
                doc.add(dots);
                doc.add(sign);
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));

                Paragraph thank = new Paragraph("Thank you");
                thank.setAlignment(Element.ALIGN_CENTER);
                doc.add(thank);
                Paragraph comeAgain = new Paragraph("........................... Come Again ............................");
                comeAgain.setAlignment(Element.ALIGN_CENTER);
                doc.add(comeAgain);
//                com.itextpdf.text.List list = new com.itextpdf.text.List(true);
//                list.add("First Element");
//                list.add("First Element");
//                list.add("First Element");
//                list.add("First Element");
//                list.add("First Element");
//                doc.add(list);
                invoiceFileCount++;
                doc.close();
                JOptionPane.showMessageDialog(null, "Report Created..");
            } catch (DocumentException | FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Invoice Id is required");
        }

    }//GEN-LAST:event_InvoiceBtnActionPerformed

    private void PurchaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PurchaseBtnActionPerformed
        // TODO add your handling code here:
        String fileCount = Integer.toString(purchseFileCount);
        String purId = "PUR" + PurTxt.getText();
        if (!PurTxt.getText().equals("")) {
            try {
                // TODO add your handling code here:
                Document doc = new Document(PageSize.A4);
                PdfWriter.getInstance(doc, new FileOutputStream("PurchaseOrder" + fileCount + ".pdf"));

                doc.open();
                Image image = Image.getInstance("sampath1.png");
                doc.add(image);
                //    doc.add(new Paragraph("Hello World",FontFactory.getFont(FontFactory.TIMES_BOLD,18,Font.BOLD)).setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                Chunk title = new Chunk("Purchase Order Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 24, Font.BOLD));
                title.setUnderline(1f, -2f); //0.1 thick, -2 y-location  
                Paragraph preface = new Paragraph(" ");
                preface.add(title);
                preface.setAlignment(Element.ALIGN_CENTER);
                doc.add(preface);

                doc.add(new Paragraph(" "));
                Paragraph date = new Paragraph("Date : " + getDate());
                Paragraph invoiceId = new Paragraph("Purchase Order Id : " + purId);
                date.setAlignment(Element.ALIGN_LEFT);
                doc.add(date);
                invoiceId.setAlignment(Element.ALIGN_LEFT);
                doc.add(invoiceId);
                //    doc.add(new Paragraph(" ").setAlignment(Element.ALIGN_CENTER));
                Paragraph dot = new Paragraph("---------------------------------------------------------------------------------------------------------------");
                dot.setAlignment(Element.ALIGN_CENTER);
                doc.add(dot);

                //  doc.add(new Paragraph(getDate()));
                //   int count = InvoiceController.getCountInvoiceDetatilsByInvoiceId(invId);
                PdfPTable table = new PdfPTable(new float[]{1.5f, 4, 1, 1, 1, 2});
//                PdfPCell cell = new PdfPCell(new Paragraph("Title"));
//                cell.setColspan(4);
//                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
//                cell.setBackgroundColor(BaseColor.DARK_GRAY);
                //     table.addCell(cell);
                table.addCell("Supplier Id");
                table.addCell("Item Name");
                table.addCell("Item Id");
                table.addCell("Qunatity");
                table.addCell("Unit Price");
                table.addCell("Line Total");

                ResultSet rst = PurchaseOrderController.getInfoForPurchaseReport(purId);
                //   System.out.println(rst.getString(1));
                System.out.println("++===================++");
                doc.add(new Paragraph(" "));
                while (rst.next()) {
                    Object[] row = new Object[6];
                    for (int i = 1; i <= 6; i++) {
                        row[i - 1] = rst.getString(i);
                        //     System.out.println(row[i - 1].toString());
                        table.addCell(row[i - 1].toString());
                    }

                }
                rst.close();

                doc.add(table);
                doc.add(new Paragraph(" "));
//                Paragraph total = new Paragraph(("Total :   " + getTotal(invId)),FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD));
//                doc.add(total);
                doc.add(new Paragraph("Prepared By :"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Name : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Signature : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Approved By :"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Name : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Signature : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Date : ........................................................................................."));
                doc.add(new Paragraph(" "));
                purchseFileCount++;
                doc.close();
                JOptionPane.showMessageDialog(null, "Report Created..");
            } catch (DocumentException | FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "PurchaseOrder Id is required");
        }
    }//GEN-LAST:event_PurchaseBtnActionPerformed

    private void EmployeeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeBtnActionPerformed
        // TODO add your handling code here:
        String fileCount = Integer.toString(EmployeeFileCount);
        String empId = "EM" + EmployeeTxt.getText();
        if (!EmployeeTxt.getText().equals("")) {
            try {
                // TODO add your handling code here:
                Document doc = new Document(PageSize.A4);
                PdfWriter.getInstance(doc, new FileOutputStream("EmployeeReport" + fileCount + ".pdf"));

                doc.open();
                Image image = Image.getInstance("sampath1.png");
                doc.add(image);
                //    doc.add(new Paragraph("Hello World",FontFactory.getFont(FontFactory.TIMES_BOLD,18,Font.BOLD)).setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                Chunk title = new Chunk("Employee Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 24, Font.BOLD));
                title.setUnderline(1f, -2f); //0.1 thick, -2 y-location  
                Paragraph preface = new Paragraph(" ");
                preface.add(title);
                preface.setAlignment(Element.ALIGN_CENTER);
                doc.add(preface);

                doc.add(new Paragraph(" "));
                Paragraph date = new Paragraph("Date : " + getDate());
                Paragraph employeeId = new Paragraph("Employee Id : " + empId);
                date.setAlignment(Element.ALIGN_LEFT);
                doc.add(date);
                employeeId.setAlignment(Element.ALIGN_LEFT);
                doc.add(employeeId);
                //    doc.add(new Paragraph(" ").setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                Paragraph dot = new Paragraph("---------------------------------------------------------------------------------------------------------------");
                dot.setAlignment(Element.ALIGN_CENTER);
                doc.add(dot);
                doc.add(new Paragraph(" "));

                //  doc.add(new Paragraph(getDate()));
                //   int count = InvoiceController.getCountInvoiceDetatilsByInvoiceId(invId);
                PdfPTable table = new PdfPTable(new float[]{4, 2});

                Employee employee = EmployeeController.getEmployee(empId);

                if (employee != null) {
                    table.addCell("Employee Name");
                    table.addCell(employee.getEmployeeName());
                    table.addCell("Gender");
                    table.addCell(employee.getGender());
                    table.addCell("Civil Status");
                    table.addCell(employee.getCivilStatus());
                    table.addCell("Address");
                    table.addCell(employee.getAddress());
                    table.addCell("Date of Birth");
                    table.addCell(employee.getDateOfBirth());
                    table.addCell("NIC");
                    table.addCell(employee.getNicNo());
                    table.addCell("Contact No");
                    table.addCell(employee.getMobileNo());
                    table.addCell("Email");
                    table.addCell(employee.getEmail());
                    table.addCell("Designation");
                    table.addCell(employee.getDesignation());
                } else {
                    JOptionPane.showMessageDialog(null, "Incorrect Employee Id");
                }
                //   System.out.println(rst.getString(1));

                doc.add(table);
                doc.add(new Paragraph(" "));
//                Paragraph total = new Paragraph(("Total :   " + getTotal(invId)),FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD));
//                doc.add(total);
                EmployeeFileCount++;
                doc.close();
                JOptionPane.showMessageDialog(null, "Report Created..");
            } catch (DocumentException | FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Employee Id is required");
        }
    }//GEN-LAST:event_EmployeeBtnActionPerformed

    private void SalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalesBtnActionPerformed
        // TODO add your handling code here:
        String fileCount = Integer.toString(salesCount);
        String backDate = backDateTxt.getText();
        if (!backDateTxt.getText().equals("")) {
            try {
                // TODO add your handling code here:
                Document doc = new Document(PageSize.A4);
                PdfWriter.getInstance(doc, new FileOutputStream("SalesReport" + fileCount + ".pdf"));

                doc.open();
                Image image = Image.getInstance("sampath1.png");
                doc.add(image);
                //    doc.add(new Paragraph("Hello World",FontFactory.getFont(FontFactory.TIMES_BOLD,18,Font.BOLD)).setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                Chunk title = new Chunk("Sales Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 24, Font.BOLD));
                title.setUnderline(1f, -2f); //0.1 thick, -2 y-location  
                Paragraph preface = new Paragraph(" ");
                preface.add(title);
                preface.setAlignment(Element.ALIGN_CENTER);
                doc.add(preface);

                doc.add(new Paragraph(" "));
                Paragraph date = new Paragraph(" From Date : " + getDate());
                Paragraph date2 = new Paragraph(" To Date : " + backDate);
                //     Paragraph invoiceId = new Paragraph("Purchase Order Id : " + purId);
                date.setAlignment(Element.ALIGN_LEFT);
                doc.add(date);
                date2.setAlignment(Element.ALIGN_LEFT);
                doc.add(date2);
                //    doc.add(new Paragraph(" ").setAlignment(Element.ALIGN_CENTER));
                Paragraph dot = new Paragraph("---------------------------------------------------------------------------------------------------------------");
                dot.setAlignment(Element.ALIGN_CENTER);
                doc.add(dot);

                //  doc.add(new Paragraph(getDate()));
                //   int count = InvoiceController.getCountInvoiceDetatilsByInvoiceId(invId);
                PdfPTable table = new PdfPTable(new float[]{1.5f, 3, 3, 2});
//                PdfPCell cell = new PdfPCell(new Paragraph("Title"));
//                cell.setColspan(4);
//                cell.setHorizontalAlignment(Element.ALIGN_CENTER);
//                cell.setBackgroundColor(BaseColor.DARK_GRAY);
                //     table.addCell(cell);
                table.addCell("Invoice Id");
                table.addCell("Customer Id");
                table.addCell("Issue Date");
                table.addCell("Line Total");

                ResultSet rst = ReportController.getInvoiceDetailsByDateforSailsReport(backDate, getDate());
                //   System.out.println(rst.getString(1));
                System.out.println("++===================++");
                doc.add(new Paragraph(" "));
                while (rst.next()) {
                    Object[] row = new Object[4];
                    for (int i = 1; i <= 4; i++) {
                        row[i - 1] = rst.getString(i);
                   //     System.out.println(row[i - 1].toString());
                        table.addCell(row[i - 1].toString());
                    }

                }
                rst.close();

                doc.add(table);
                doc.add(new Paragraph(" "));
                String totalSales = ReportController.getTotalSales(backDate, getDate());
                Paragraph total = new Paragraph(("Total Sales: Rs.  " + totalSales), FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD));
                doc.add(total);
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Prepared By :"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Name : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Signature : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Approved By :"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Name : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Signature : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Date : ........................................................................................."));
                doc.add(new Paragraph(" "));
                salesCount++;
                doc.close();
                JOptionPane.showMessageDialog(null, "Report Created..");
            } catch (DocumentException | FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Date is required");
        }
    }//GEN-LAST:event_SalesBtnActionPerformed

    private void GRNReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GRNReportBtnActionPerformed
        // TODO add your handling code here:
        String fileCount = Integer.toString(grnCount);
        String supId = "SUP" + SupplierTxt.getText();
        if (!SupplierTxt.getText().equals("")) {
            try {
                // TODO add your handling code here:
                Document doc = new Document(PageSize.A4);
                PdfWriter.getInstance(doc, new FileOutputStream("GRNReport" + fileCount + ".pdf"));

                doc.open();
                Image image = Image.getInstance("sampath1.png");
                doc.add(image);
                //    doc.add(new Paragraph("Hello World",FontFactory.getFont(FontFactory.TIMES_BOLD,18,Font.BOLD)).setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                Chunk title = new Chunk("GRN Report", FontFactory.getFont(FontFactory.TIMES_BOLD, 24, Font.BOLD));
                title.setUnderline(1f, -2f); //0.1 thick, -2 y-location  
                Paragraph preface = new Paragraph(" ");
                preface.add(title);
                preface.setAlignment(Element.ALIGN_CENTER);
                doc.add(preface);

                doc.add(new Paragraph(" "));
                Paragraph date = new Paragraph("Date : " + getDate());
                Paragraph employeeId = new Paragraph("Supplier Id : " + supId);
                date.setAlignment(Element.ALIGN_LEFT);
                doc.add(date);
                employeeId.setAlignment(Element.ALIGN_LEFT);
                doc.add(employeeId);
                //    doc.add(new Paragraph(" ").setAlignment(Element.ALIGN_CENTER));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                Paragraph dot = new Paragraph("---------------------------------------------------------------------------------------------------------------");
                dot.setAlignment(Element.ALIGN_CENTER);
                doc.add(dot);
                doc.add(new Paragraph(" "));

                //  doc.add(new Paragraph(getDate()));
                //   int count = InvoiceController.getCountInvoiceDetatilsByInvoiceId(invId);
                PdfPTable table = new PdfPTable(new float[]{2, 4, 2, 2, 2});

                table.addCell("Item Id");
                table.addCell("Item Name");
                table.addCell("Unit Size");
                table.addCell("Date");
                table.addCell("Line Total");

                ResultSet rst = ReportController.getGRNeDetailsBySupplierId(supId);
                //   System.out.println(rst.getString(1));
                System.out.println("++===================++");
                doc.add(new Paragraph(" "));
                while (rst.next()) {
                    Object[] row = new Object[5];
                    for (int i = 1; i <= 5; i++) {
                        row[i - 1] = rst.getString(i);
                        //    System.out.println(row[i - 1].toString());
                        table.addCell(row[i - 1].toString());
                    }

                }
                rst.close();
                //   System.out.println(rst.getString(1));

                doc.add(table);
                doc.add(new Paragraph(" "));
//                Paragraph total = new Paragraph(("Total :   " + getTotal(invId)),FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD));
//                doc.add(total);
                String totalSales = ReportController.getTotalItem(supId);
                Paragraph total = new Paragraph(("Total :  Rs. " + totalSales), FontFactory.getFont(FontFactory.TIMES_BOLD, 14, Font.BOLD));
                doc.add(total);
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Prepared By :"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Name : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Signature : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Approved By :"));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Name : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Signature : ........................................................................................."));
                doc.add(new Paragraph(" "));
                doc.add(new Paragraph("Date : ........................................................................................."));
                doc.add(new Paragraph(" "));
                grnCount++;
                doc.close();
                JOptionPane.showMessageDialog(null, "Report Created..");
            } catch (DocumentException | FileNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "There might be a duplicate documnet");
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ReportsFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Supplier Id is required");
        }
    }//GEN-LAST:event_GRNReportBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReportsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReportsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReportsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReportsFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportsFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CatMenuBtn;
    private javax.swing.JLabel CatMenuLbl;
    private javax.swing.JButton EmployeeBtn;
    private javax.swing.JTextField EmployeeTxt;
    private javax.swing.JButton GRNReportBtn;
    private javax.swing.JButton HomeBtn;
    private javax.swing.JButton InvoiceBtn;
    private javax.swing.JButton LogOutBtn;
    private javax.swing.JTextField PurTxt;
    private javax.swing.JButton PurchaseBtn;
    private javax.swing.JButton SalesBtn;
    private javax.swing.JTextField SupplierTxt;
    private javax.swing.JFormattedTextField backDateTxt;
    private javax.swing.JTextField invoiceTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    // End of variables declaration//GEN-END:variables
}
